.\" vim: tw=75
.LL 1i
.TH notify-daemon 8
.SH NAME
notify-daemon \- Daemon for controlling LCD Displays with Hitachi 44780
controller

.SH SYNOPSYS
\fBnotify-daemon\fR [-v] [-f \fIfifo\fR] [-m \fImode\fR]
.nf
  [-t readtimeout] [-p port]
  [-i startup_message] [-s shutdown_message]
.fi

.SH DESCRIPTION
\fBnotify-daemon\fR(8) reads a named pipe \fIfifo\fR or listens on a UDP
socket to read messages from clients to be printed as desktop notification
using \fBnotify-send\fR(1). \fBnotify-daemon\fR(8) creates the directory
for the named pipe \fIfifo\fR, if it doesn't exist. The file mode for
\fIfifo\fR can be provided by \fImode\fR.

\fBnotify-daemon\fR(8) is generally started through \fBsupervise\fR(8)
using /service/notify-desktop service. You can however use your own method
to start \fBnotify-daemon\fR(8).

By default, \fBnotify-daemon\fR(8) creates
\fIrundir/notify-desktop/notify-fifo\fR named pipe and listens on UDP port
\fB1807\fR.

You can use \fBnc\fR(1) command or any TCP applciation to write a message
to the UDP port 1807. You can use any any client that writes to the named
pipe \fIrundir/notify-desktop/notify-fifo\fR, created by
\fBnotify-daemon\fR(8).

Any client has to write the message by following format below (<sp> stands
for the white space character).

.EX
\fIrownum\fR<sp>\fIscroll\fR<sp>\fIclear\fR:\fImessage\fR
.EE

where
.TP
\fIrownum\fR
value can be 0 or 1 for 16x2 display or 0, 1, 2 or 3 for 20x4 display. This
is used by \fBlcd-daemon\fR(8) but ignored by \fBnotify-daemon\fR(8).
.TP
\fIscroll\fR
value can be 0 or 1. 1 turns on scrolling. This is used by
\fBlcd-daemon\fR(8) but ignored by \fBnotify-daemon\fR(8).
.TP
\fIclear\fR
The following values are supported for \fIclear\fR
.EX
1 clear the screen
2 clear and initialize
3 initializing LCD display
4 clear screen without displaying text
5 clear and initialize screen without displaying text
6 initialize screen without displaying text
.EE.
This is used by \fBlcd-daemon\fR(8) but ignored by \fBnotify-daemon\fR(8).
.TP
\fImessage\fR
Here \fImessage\fR is any string consisting of one or more words.

.SH OPTIONS
.TP
\fB\-v\fR
Turn on verbose output
.TP
\fB\-f\fR \fIfifo\fR
Path to fifo
.TP
\fB\-m\fR \fImode\fR
File mode to set for \fIfifo\fR on startup.
.TP
\fB\-p\fR \fIport\fR
UDP port on which \fBnotify-daemon\fR(8) listens. If not provided this is
\fB1807\fR.
.TP
\fB\-t\fR \fIreadtimeout\fR
No of milliseconds \fBnotify-daemon\fR(8) will read a message from a client
before timing out. Default is \fB300\fR milliseconds.
.TP
\fB\-i\fR \fIstartup_msg\fR
Startup message to be displayed on LCD on \fBnotify-daemon\fR(8) startup
.TP
\fB\-s\fR \fIshutdown_msg\fR
Shutdown message to be displayed on LCD on \fBnotify-daemon\fR(8) startup

.SH Environment Variables
\fB\fBnotify-daemon\fR(8)(8)\fR uses the following environment variables.

.TP 13
NOTIFYFIFO
If the -f option is not provided, \fBnotify-daemon\fR(8) reads
\fIrundir/notify-desktop/notify-fifo\fR, where \fIrundir\fR is /run,
/var/run or /tmp depending on your system. The fifo can be changed by
setting \fBNOTIFYFIFO\fR environment variable.

.TP
FIFO_MODE
if the -m option is not provided, \fBnotify-daemon\fR(8) sets 0666 as the
file mode for \fIfifo\fR. The mode can be changed by setting \fBFIFO_MODE\fR
environment variable.

.TP
VERBOSE
If -v option is not provided the value of \fBVERBOSE\fR environment is
used. Setting \fBVERBOSE=1\fR turns on verbose output and \fBVERBOSE=0\fR
turns of verbose output.

.TP
DATA_TIMEOUT
If -t is not provided, the env variable \fBDATA_TIMEOUT\fR is used. This is
timeout in seconds after which \fBnotify-daemon\fR(8) will timeout when
reading from the named pipe or from the socket. Default is \fB300\fR
seconds.

.TP
PORT
If -p is not provided, the env variable \fBPORT\fR is used. This is the UDP
port on which \fBnotify-daemon\fR(8) listens for UDP packets. Default port
is \fB1807\fR.

.SH RETURN VALUE
0 if all steps were successful, non-zero otherwise. If any of the steps
fail, a diagnostic message is printed. If any systerm error is encountered,
the return value will be 111.

.SH AUTHORS
Manvendra Bhangui <lcd-daemon@indimail.org>

.SH "SEE ALSO"
supervise(8), svc(8), envdir(8), multilog(8), lcd-daemon(8)
